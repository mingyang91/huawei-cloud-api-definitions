{"base_path":null,"components":null,"consumes":"[\"application/json\"]","definitions":{"CommonErrorResponse":{"description":"通用错误响应体","properties":{"encoded_authorization_message":{"description":"包含有关未经授权请求的信息。","type":"string","x-omitempty":true},"error_code":{"description":"响应码","maxLength":11,"minLength":11,"type":"string"},"error_msg":{"description":"响应消息","type":"string"}},"type":"object"},"DeploymentTargetsPrimitiveTypeHolder":{"example":{"deployment_targets":{"domain_ids_uri":"https://your-bucket.cn-north-7.myhuaweicloud.com/my-domain-ids.csv","regions":["cn-north-7"]}},"properties":{"deployment_targets":{"$ref":"#/definitions/deployment_targets"}},"required":["deployment_targets"],"type":"object"},"OperationPreferencesTypeHolder":{"example":{"operation_preferences":{"failure_tolerance_count":4,"failure_tolerance_mode":"STRICT_FAILURE_TOLERANCE","max_concurrent_count":5,"region_concurrency_type":"SEQUENTIAL","region_order":["cn-north-1","cn-north-4"]}},"properties":{"operation_preferences":{"$ref":"#/definitions/operation_preferences"}},"type":"object"},"StackSetIdPrimitiveTypeHolder":{"example":{"stack_set_id":"1b15e005-bdbb-4bd7-8f9a-a09b6774b4b3"},"properties":{"stack_set_id":{"description":"资源栈集(stack_set)的唯一ID。\n\n此ID由资源编排服务在生成资源栈集的时候生成,为UUID。\n\n由于资源栈集名仅仅在同一时间下唯一,即用户允许先生成一个叫HelloWorld的资源栈集,删除,在重新创建一个同名资源栈集。\n\n对于团队并行开发,用户可能希望确保,当前我操作的资源栈集就是我以为的那个,而不是又其他队友删除后创建的同名资源栈集。因此,使用ID就可以做到强匹配。\n\n资源编排服务保证每次创建的资源栈集所对应的ID都不相同,更新不会影响ID。如果给予的stack_set_id和当前资源栈集的ID不一致,则返回400","maxLength":36,"minLength":36,"pattern":"^[a-z0-9]+[a-z0-9-]*$","type":"string","x-isnullable":true}},"type":"object"},"StackSetOperationIdPrimitiveTypeHolder":{"example":{"stack_set_operation_id":"1b15e005-bdbb-4bd7-8f9a-a09b6774b4b3"},"properties":{"stack_set_operation_id":{"description":"资源栈集操作(stack_set_operation)的唯一Id。\n\n此ID由资源编排服务在生成资源栈集操作的时候生成,为UUID。","maxLength":36,"minLength":36,"pattern":"^[a-z0-9]+[a-z0-9-]*$","type":"string","x-isnullable":true}},"type":"object"},"UpdateStackInstancesRequestBody":{"allOf":[{"$ref":"#/definitions/StackSetIdPrimitiveTypeHolder"},{"$ref":"#/definitions/DeploymentTargetsPrimitiveTypeHolder"},{"$ref":"#/definitions/VarOverridesPrimitiveTypeHolder"},{"$ref":"#/definitions/OperationPreferencesTypeHolder"}]},"UpdateStackInstancesResponseBody":{"allOf":[{"$ref":"#/definitions/StackSetOperationIdPrimitiveTypeHolder"}]},"VarOverridesPrimitiveTypeHolder":{"properties":{"var_overrides":{"description":"用户期望在资源栈实例中更新的参数内容,参数将覆盖到本次请求中指定的所有资源栈实例中,并根据更新后的参数部署资源栈实例。覆盖后的参数将永久被记录在资源栈实例中,并在之后的部署中继续使用被覆盖参数,直到下一次被更新覆盖。\n\n用户只能覆盖在资源栈集中记录的参数集合vars,如果指定了vars中不存在的参数会报错400。如果用户想要增加可以覆盖的参数,需要先通过DeployStackSet API 更新资源栈集记录的参数集合vars。通过DeployStackSet API更新vars后,资源栈实例中已经被覆盖的参数不会被更新,仍然保留覆盖值。\n\n参数覆盖只针对用户在资源栈集中通过vars指定的参数,不包括在模板中定义使用默认值的参数。如果用户期望对使用默认值的参数进行覆盖,则需要按上述要求先通过DeployStackSet API 更新资源栈集记录的vars,显式地向vars中增加相关参数定义。\n\n用户每次通过DeployStackSet API 更新资源栈集vars时,如果缺少了任一部署目标的资源栈实例中所记录的被覆盖参数时(即当前被覆盖参数已不是更新后资源栈集参数vars的子集),会报错400\n\n当前用户在更新参数覆盖时不能指定保留已有的参数覆盖,必须在更新的时候给予全部的覆盖信息。\n\n参数覆盖后的资源栈实例应用的vars_body总长不超过51200。参数覆盖后的资源栈实例应用的vars_uri文件内容不超过1M。\n\n例如:资源栈集中记录的vars_body内容为”key1=value1,key2=value2,....“,资源栈实例参数覆盖的vars_body为“key1=another_value1”,则要求应用参数覆盖后的vars_body“key1=another_value1,key2=value2,....”总长不超过51200。\n\n例如:资源栈集中记录的vars_uri文件内容为”key1=value1,key2=value2,....“,资源栈实例参数覆盖的vars_body为“key1=another_value1”,则要求应用参数覆盖后的vars_uri文件内容“key1=another_value1,key2=value2,....”总长不超过1M。\n\n若var_overrides未给予,则不会更新覆盖资源栈实例中记录的参数。若vars_uri或vars_body或use_stack_set_vars至少给予了一个,则会对参数覆盖进行替换式更新,即所给予的参数将被完全覆盖至指定资源栈实例中。\n\nvars_body、vars_uri和use_stack_set_vars中声明的全部参数集合必须和资源栈集中记录的参数集合保持一致,如果声明了资源栈集中不存在的参数会报错400,如果没有声明已经在资源栈集中记录的参数会报错400,如果声名了同一个参数会报错400。\n\n注:\n  * 期望覆盖指定参数值,需要在vars_uri或者vars_body中指定期望覆盖的参数名称及参数值。\n  * 期望将某个已覆盖参数回退至资源栈集中记录的参数值,需要在use_stack_set_vars中指定期望回退的参数名称。\n  * 期望将所有已覆盖参数回退至资源栈集中记录的参数值,需要在use_stack_set_vars中指定资源栈集中记录的全部参数名称。\n  * 期望使用当前资源栈实例中记录的参数值进行部署,则不需要指定var_overrides。","example":{"var_overrides":{"use_stack_set_vars":"use_stack_set_vars=vars_value","vars_body":"vars_key_1=vars_value","vars_uri":"https://your-bucket.cn-north-7.myhuaweicloud.com/my-hello-world-vars.tfvars"}},"properties":{"use_stack_set_vars":{"description":"用户期望使用资源栈集中记录的参数值进行部署的参数名称列表。\n\n用户只能选择已经在资源栈集中被记录的参数,如果指定了未被记录的参数会报错400。\n\n如果use_stack_set_vars中包含资源栈实例中已经被覆盖的参数名称,则会将该参数回退至资源栈集中记录的参数值。","items":{"type":"string"},"minItems":1,"type":"array","uniqueItems":true},"vars_body":{"description":"HCL参数文件的内容。HCL模板支持参数传入,即,同一个模板可以给予不同的参数而达到不同的效果。\n\n* vars_body使用HCL的tfvars格式,用户可以将“.tfvars”中的内容提交到vars_body中\n\n* 资源编排服务支持vars_body和vars_uri,如果他们中声名了同一个变量,将报错400\n\n* 如果vars_body过大,可以使用vars_uri\n\n* 资源栈集不支持敏感数据加密,资源编排服务会直接明文使用、log、展示、存储对应的vars_body。","maxLength":51200,"minLength":0,"type":"string"},"vars_uri":{"description":"HCL参数文件的OBS地址。HCL模板支持参数传入,即,同一个模板可以给予不同的参数而达到不同的效果。\n\nOBS地址支持同类型Region之间进行互相访问(Region分为通用Region和专属Region,通用Region指面向公共租户提供通用云服务的Region;专属Region指只承载同一类业务或只面向特定租户提供业务服务的专用Region)\n\n* vars_uri需要指向一个OBS的pre-signed URL地址,其他地址暂不支持\n\n* 资源编排服务支持vars_body和vars_uri,如果他们中声名了同一个变量,将报错400\n\n* vars_uri中的内容使用HCL的tfvars格式,用户可以将“.tfvars”中的内容保存到文件并上传到OBS中,并将OBS pre-signed URL传递给vars_uri\n\n* 资源栈集不支持敏感数据加密,资源编排服务会直接明文使用、log、展示、存储vars_uri对应的参数文件内容","maxLength":2048,"minLength":0,"pattern":"^(http|https)://[\\S]*(\\.tfvars){1}(\\?[\\S]+)?$","type":"string"}},"type":"object"}},"type":"object"},"deployment_targets":{"description":"部署目标信息。","properties":{"domain_ids":{"description":"权限模型是SELF_MANAGED时,用户指定包含本次操作涉及到的租户ID内容。\n\n*在DeployStackSet API中,如果指定该参数,根据用户输入的domain_ids列表和regions列表,以笛卡尔积的形式选择资源栈集中存在的资源栈实例进行部署。如果指定了没有被资源栈集所管理的domain_id,则会报错。*\n\ndomain_ids和domain_ids_uri 有且仅有一个存在。","items":{"maxLength":64,"minLength":1,"pattern":"^[A-Za-z0-9-]+$","type":"string"},"minItems":1,"type":"array","uniqueItems":true},"domain_ids_uri":{"description":"权限模型是SELF_MANAGED时,用户指定包含本次操作涉及到的租户ID内容文件的OBS地址。\n\n内容格式要求每个租户ID以逗号(,)分割,支持换行。当前仅支持csv文件,且文件的编码格式须为UTF-8。文件内容大小不超过100KB。\n\n上传的csv文件应尽量避免Excel操作,以防出现读取内容不一致的问题。推荐使用记事本打开确认内容是否符合预期。\n\n*在DeployStackSet API中,如果指定该参数,根据用户输入的domain_ids_uri文件内容和regions列表,以笛卡尔积的形式选择资源栈集中存在的资源栈实例进行部署。如果内容包含了没有被资源栈集所管理的domain_id,则会报错。*\n\ndomain_ids和domain_ids_uri有且仅有一个存在。","maxLength":2048,"minLength":0,"pattern":"^(http|https)://[\\S]*(\\.csv){1}(\\?[\\S]+)?$","type":"string"},"regions":{"description":"用户指定资源栈集操作所涉及的区域。\n\n*在DeployStackSet API中,根据用户输入regions和domain_ids列表,以笛卡尔积的形式选择资源栈集中存在的资源栈实例进行部署。如果指定了没有被资源栈集所管理的region,则会报错。*","example":["cn-north-7"],"items":{"type":"string"},"minItems":1,"type":"array","uniqueItems":true}},"required":["regions"],"type":"object"},"operation_preferences":{"description":"资源栈集操作(stack_set_operation)的部署策略。该参数只在指定的单次操作中生效。\n\n当用户不指定该参数时,默认的操作部署策略为区域(region)内资源栈实例串行部署,即每次只执行一个资源栈实例,区域(region)间随机且串行部署,执行完一个region下的全部资源栈实例后,才会选择另一个region部署,容错次数默认为0。\n\n该参数可以在生成资源栈集操作的四个API中指定:\n\n创建资源栈实例(CreateStackInstance),部署资源栈集(DeployStackSet),更新资源栈实例(UpdateStackInstance),删除资源栈实例(DeleteStackInstance)","properties":{"failure_tolerance_count":{"description":"容错次数。用户定义在每个区域(region)下,允许部署失败的资源栈实例数量。该参数取值默认为0,限定0和正整数。\n\n如果定义region顺序执行(region_concurrency_type值为SEQUENTIAL),在某个region超过容错次数时,资源栈集会取消所有状态仍处于WAIT_IN_PROGRESS状态的实例。被取消的实例状态最终变为CANCEL_COMPLETE;\n\n如果是region并行执行(region_concurrency_type值为PARALLEL),在某个region超过容错次数时,资源栈集只会取消该region下所有处于WAIT_IN_PROGRESS状态的实例。被取消的实例状态最终变为CANCEL_COMPLETE。\n\n对处于OPERATION_IN_PROGRESS,或已经部署完成,即处于OPERATION_COMPLETE或者OPERATION_FAILED状态的资源栈实例,不受影响,状态不变。\n\nfailure_tolerance_count  和 failure_tolerance_percentage 仅能有一个存在。","example":1,"format":"int64","maximum":100,"minimum":0,"type":"integer","x-isnullable":true},"failure_tolerance_mode":{"default":"STRICT_FAILURE_TOLERANCE","description":"资源栈集操作部署的失败容忍模式,分为两种,STRICT_FAILURE_TOLERANCE和SOFT_FAILURE_TOLERANCE,区分大小写,默认值为STRICT_FAILURE_TOLERANCE。\n\n详细介绍:\n\n* `STRICT_FAILURE_TOLERANCE`:此选项会动态降低并发级别,以确保同region下部署失败的账户数量永远不超过 failure_tolerance_count + 1。当用户指定failure_tolerance_percentage时,确保同region下部署失败的账户数量不超过 failure_tolerance_percentage * 资源栈实例数 + 1。\n\n* 初始实际最大并发数为max_concurrent_count,如果用户指定的是max_concurrent_percentage,则初始实际最大并发数为 max_concurrent_percentage * 资源栈实例数,随后,实际最大并发数会根据失败次数增加而减少。\n\n* `SOFT_FAILURE_TOLERANCE`:此选项将failure_tolerance_count与实际并发数分离开。该参数允许资源栈集操作始终以指定的 max_concurrent_count 或 max_concurrent_percentage 操作资源栈实例。\n\n* 此时不保证资源栈实例失败总数小于 failure_tolerance_count + 1,如果用户指定的是failure_tolerance_percentage的值,则部署失败次数不会超过 failure_tolerance_percentage * 资源栈实例数 + 1。","enum":["STRICT_FAILURE_TOLERANCE","SOFT_FAILURE_TOLERANCE"],"example":"STRICT_FAILURE_TOLERANCE","type":"string"},"failure_tolerance_percentage":{"description":"容错百分比。定义每个区域(region)下,允许部署失败的资源栈实例数占该region下所有资源栈实例数的百分比。该参数取值默认为0,限定0和正整数。\n\n通过容错百分比*资源栈实例数,并向下取整,得到实际容错次数。\n\n当concurrency_mode指定为STRICT_FAILURE_TOLERANCE时,实际最大并发账户数最多比实际容错次数多1。\n\nfailure_tolerance_count  和 failure_tolerance_percentage 仅能有一个存在。","example":1,"format":"int64","maximum":100,"minimum":0,"type":"integer","x-isnullable":true},"max_concurrent_count":{"description":"每个区域(region)下可同时部署资源栈实例的最大账户数。该参数取值默认为1,限定为正整数。\n\n最大并发账户数最多比容错次数多1。如果用户指定failure_tolerance_percentage,最大并发账户数最多比 failure_tolerance_percentage * 资源栈实例数多1。保证部署在所需的容错级别停止。\n\nmax_concurrent_count 和 max_concurrent_percentage 仅能有一个存在。","example":1,"format":"int64","maximum":5,"minimum":1,"type":"integer","x-isnullable":true},"max_concurrent_percentage":{"description":"最大并发账户百分比,每个区域(region)中可同时部署的资源栈实例的最大账户百分比。该参数取值默认为1,限定正整数。\n\nRFS根据百分比 *(每个region下资源栈实例数)得到的值,再向下取整,得到实际最大并发账户数。若实际最大并发账户数向下取整值为0时,则默认选择最大并发账户数为1。\n\n通过百分比计算得到的实际最大并发账户数最多比容错次数多1。如果用户指定failure_tolerance_percentage,实际最大并发账户数最多比 failure_tolerance_percentage * 资源栈实例数多1。保证部署在所需的容错级别停止。\n\nmax_concurrent_count 和 max_concurrent_percentage 仅能有一个存在。","example":1,"format":"int64","maximum":100,"minimum":1,"type":"integer","x-isnullable":true},"region_concurrency_type":{"default":"SEQUENTIAL","description":"部署资源栈实例时区域(region)的执行策略,分为两种,SEQUENTIAL和PARALLEL,区分大小写,默认值为SEQUENTIAL\n\n详细介绍:\n\n* `SEQUENTIAL`:顺序执行,执行完一个region下的全部资源栈实例后再去执行另一个region。默认顺序执行。\n\n* `PARALLEL`:并发执行,并发部署所有指定区域的资源栈实例。","enum":["SEQUENTIAL","PARALLEL"],"example":"SEQUENTIAL","type":"string"},"region_order":{"description":"区域(region)部署顺序。只有当用户指定region_concurrency_type为SEQUENTIAL时才会允许指定该参数。用户指定部署region的顺序,不允许出现资源栈集管理之外的region。\n\n若不指定,实际部署region顺序随机。部署顺序仅在当次部署时生效,应该包含且仅包含本次部署的所有region。","example":["cn-north-7"],"items":{"type":"string"},"type":"array","uniqueItems":true,"x-omitempty":true}},"type":"object"}},"description":null,"group_id":"ffbc0f3a195c4338b5218addf5d56a6c","host":"rfs.cn-north-4.myhuaweicloud.com","id":"5ed3d2bfc0a3427b9e6d78e6f029d832","info_version":"v1","method":"patch","name":"UpdateStackInstances","parameters":{},"paths":{"/v1/stack-sets/{stack_set_name}/stack-instances":{"patch":{"consumes":["application/json"],"description":"更新资源栈实例(UpdateStackInstances)\n\n此API用于更新并部署指定资源栈实例集合,并返回资源栈集操作ID(stack_set_operation_id)\n\n此API可以通过var_overrides参数,更新指定资源栈实例的参数值,进行参数覆盖。若var_overrides参数未给予,则默认使用当前资源栈集中记录的参数进行部署,详见:var_overrides参数描述。用户只可以更新已经存在的资源栈实例,如果用户想要增加额外的资源栈实例,请使用CreateStackInstances API。\n\n通过DeployStackSet API更新资源栈集参数后,资源栈实例中已经被覆盖的参数不会被更新,仍然保留覆盖值。\n\n用户只能覆盖已经在资源栈集中记录的参数,如果用户想要增加可以覆盖的参数,需要先通过DeployStackSet API更新资源栈集记录的参数集合。\n\n* 当触发的部署失败时,资源栈实例不会自动回滚参数覆盖,但部署失败的资源栈会默认自动回滚,已经部署成功的资源栈不会触发回滚。\n\n* 用户可以根据资源栈集操作ID(stack_set_operation_id),通过ShowStackSetOperationMetadata API获取资源栈集操作状态。","operationId":"UpdateStackInstances","parameters":[{"description":"用户指定的,对于此请求的唯一ID,用于定位某个请求,推荐使用UUID","in":"header","maxLength":128,"minLength":36,"name":"Client-Request-Id","pattern":"^[A-Za-z0-9]+[A-Za-z0-9-]*$","required":true,"type":"string"},{"description":"资源栈集的名称。此名字在domain_id+region下应唯一,可以使用中文、大小写英文、数字、下划线、中划线。首字符需为中文或者英文,区分大小写。","in":"path","maxLength":128,"minLength":1,"name":"stack_set_name","pattern":"^[一-龥A-Za-z]+[一-龥A-Za-z0-9_-]*$","required":true,"type":"string"},{"description":"UpdateStackInstances API的请求Body体","in":"body","name":"UpdateStackInstancesRequestBody","required":true,"schema":{"$ref":"#/definitions/UpdateStackInstancesRequestBody"}}],"produces":["application/json"],"responses":{"202":{"description":"请求接受,异步处理","examples":{"x-response-examples-1":{"stack_set_operation_id":"fb5e781e-a27d-46e2-9954-242753857a9f"}},"schema":{"$ref":"#/definitions/UpdateStackInstancesResponseBody"}},"400":{"description":"用户请求非法","schema":{"$ref":"#/definitions/CommonErrorResponse"}},"401":{"description":"用户身份认证失败","schema":{"$ref":"#/definitions/CommonErrorResponse"}},"403":{"description":"1. 用户无权限调用此API\n2. 资源栈集状态非法,不允许创建并行操作","schema":{"$ref":"#/definitions/CommonErrorResponse"}},"404":{"description":"资源栈集不存在","schema":{"$ref":"#/definitions/CommonErrorResponse"}},"429":{"description":"请求数量过多","schema":{"$ref":"#/definitions/CommonErrorResponse"}},"500":{"description":"服务器内部错误","schema":{"$ref":"#/definitions/CommonErrorResponse"}}},"summary":"更新资源栈实例","tags":["StackSet"],"x-api-type":"open-api","x-is-registered":"Y","x-request-examples-1":{"deployment_targets":{"domain_ids_uri":"https://your-bucket.cn-north-7.myhuaweicloud.com/my-domain-ids.csv","regions":["cn-north-7"]},"operation_preferences":{"region_concurrency_type":"SEQUENTIAL"},"stack_set_id":"1b15e005-bdbb-4bd7-8f9a-a09b6774b4b4","var_overrides":{"use_stack_set_vars":["var_key_1"],"vars_uri":"https://{bucket_name}.{region}.myhuaweicloud.com/my-hello-world-vars.tfvars"}},"x-request-examples-2":{"deployment_targets":{"domain_ids":["my-domain-id"],"regions":["cn-north-7"]},"operation_preferences":{"region_concurrency_type":"PARALLEL"},"stack_set_id":"1b15e005-bdbb-4bd7-8f9a-a09b6774b4b4"},"x-request-examples-description-1":"通过vars uri 传递期望更新的覆盖参数,保留资源栈实例中已被覆盖的参数var_key_1,并触发部署,且指定更新资源栈实例在region间串行进行","x-request-examples-description-2":"部署在cn-north-7下租户ID为my-domain-id的资源栈实例,不更新参数覆盖,且指定更新资源栈实例在region间并行进行","x-request-examples-url-1":"PATCH https://{endpoint}/v1/stack-sets/my_hello_world_stack_set/stack-instances","x-request-examples-url-2":"PATCH https://{endpoint}/v1/stack-sets/my_hello_world_stack_set/stack-instances","x-rfs-external":"Y","x-rfs-internal":"Y","x-support-sdk":"Y"}}},"product_short":"AOS","region_id":"cn-north-4","schemes":["HTTPS"],"security_definitions":{"apig-auth-app":{"in":"header","name":"Authorization","type":"apiKey","x-apigateway-auth-type":"AppSigv1"},"apig-auth-app-optional":{"in":"header","name":"Authorization","type":"apiKey","x-apigateway-auth-opt":{"access-auth-type":"optional"},"x-apigateway-auth-type":"AppSigv1"},"apig-auth-iam":{"in":"header","name":"unused","type":"apiKey","x-apigateway-auth-type":"IAM"},"apig-auth-iam-none":{"in":"header","name":"unused","type":"apiKey","x-apigateway-auth-type":"IAM_NONE"},"token":{"in":"header","name":"X-Auth-Token","type":"apiKey"}},"summary":"更新资源栈实例","tags":"资源编排-资源栈集","uri":null,"version":"2.0"}